func nextPermutation(_ nums: inout [Int]) {
    guard nums.count > 0 else {
        return
    }
    
    var i = nums.count - 2
    
    while i >= 0, nums[i] >= nums[i+1] {
        i -= 1
    }
    
    if i >= 0 {
        var j = nums.count - 1
        
        while nums[j] <= nums[i] {
            j -= 1
        }
        
        nums.swapAt(i, j)
    }
    
    swapList(&nums, i+1, nums.count - 1)
}

private func swapList(_ nums: inout [Int], _ i: Int, _ j: Int) {
    var i = i
    var j = j
    
    while i < j {
        nums.swapAt(i, j)
        i += 1
        j -= 1
    }
}
