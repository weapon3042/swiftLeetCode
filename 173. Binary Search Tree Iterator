public class BSTIterator {

    private Stack<TreeNode> stack;
    private TreeNode curr;
    
    public BSTIterator(TreeNode root) {
        this.stack = new Stack<>();
        this.curr = root;
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.isEmpty() || curr != null;
    }

    /** @return the next smallest number */
    public int next() {
        
        if (!hasNext()) {
            return -1;
        }
        
        while (curr != null) {
            stack.push(curr);
            curr = curr.left;
        }
        
        TreeNode node = stack.pop();
        curr = node.right;
        
        return node.val;
    }
}
