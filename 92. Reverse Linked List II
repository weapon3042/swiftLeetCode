func reverseBetween(_ head: ListNode?, _ m: Int, _ n: Int) -> ListNode? {
    guard let root = head else {
        return head
    }
    
    var start: ListNode? = nil
    var prev: ListNode? = nil, i = 0
    
    let dummy = ListNode(0)
    var  node: ListNode? = dummy
    node?.next = root
    
    while let _ = node {
        if i == m {
            start = prev
            prev = node
            node = node?.next
        } else if i > m, i <= n {
            let nextNode = node?.next
            node?.next = prev
            prev = node
            node = nextNode
        } else if i == n + 1 {
            start?.next?.next = node
            start?.next = prev
            node = node?.next
        } else {
            prev = node
            node = node?.next
        }
        
        i += 1
    }
    
    if i == n + 1 {
        start?.next?.next = node
        start?.next = prev
        node = node?.next
    }
    
    return dummy.next
}
