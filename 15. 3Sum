func threeSum(_ nums: [Int]) -> [[Int]] {
    guard nums.count > 2 else {
        return [[Int]]()
    }
    
    var res = [[Int]](), nums = nums
    
    nums.sort()
    
    for i in 0..<nums.count-2 {
        
        if i > 0, nums[i] == nums[i-1] { continue }
        var left = i + 1
        var right = nums.count - 1
        
        while left < right {
            if nums[left] + nums[right] + nums[i] == 0 {
                res.append([nums[i], nums[left], nums[right]])
                
                left += 1
                right -= 1
                
                while left < right, nums[left] == nums[left-1] {
                    left += 1
                }
                
                while left < right, nums[right] == nums[right+1] {
                    right -= 1
                }
            } else if nums[left] + nums[right] + nums[i] > 0 {
                right -= 1
            } else {
                left += 1
            }
        }
    }
    
    return res
    
}
