    public String minWindow(String source, String target) {
        if (source == null || target == null || target.length() > source.length()) {
            return "";
        }
        
        String res = source;
        int len = 0;
        int minLen = Integer.MAX_VALUE;
        
        char[] chars = source.toCharArray();
        char[] chart = target.toCharArray();
        
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        HashMap<Character, Integer> mapt = new HashMap<Character, Integer>();
        
        for (int i=0; i< chart.length; i++) {
            map.put(chart[i], 0);
            
            if (mapt.containsKey(chart[i])) {
                mapt.put(chart[i], mapt.get(chart[i])+1);
            } else {
                mapt.put(chart[i], 1);
            }
        }
        
        for (int i=0, j = 0; i< chars.length; i++) {
            if (map.containsKey(chars[i])) {
                if (map.get(chars[i]) < mapt.get(chars[i])) {
                    len++;
                }
                map.put(chars[i], map.get(chars[i])+1);
                
                if (len == chart.length) {
                while (!map.containsKey(chars[j]) || map.get(chars[j]) > mapt.get(chars[j])) {
                    if (map.containsKey(chars[j])  && map.get(chars[j]) > mapt.get(chars[j])) {
                        map.put(chars[j], map.get(chars[j])-1);
                    }
                    j++;
                }
                
                if (i-j+1 < minLen) {
                    res = source.substring(j, i+1);
                    minLen = i-j+1;
                }               
                }
            }
        }
        
        return minLen == Integer.MAX_VALUE ? "" : res;
        
    }
