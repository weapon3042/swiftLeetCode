func fourSum(_ nums:[Int], _ target: Int) -> [[Int]] {
    guard nums.count > 3 else { return [[Int]]() }
    
    var res = [[Int]](), nums = nums
    nums.sort()
    
    for i in 0..<nums.count-3 {
        if i > 0, nums[i] == nums[i-1] { continue }
        
        for j in i+1..<nums.count-2 {
            if j > i+1, nums[j] == nums[j-1] { continue }
            
            var left = j+1, right = nums.count - 1
            
            while left < right {
                if nums[i] + nums[j] + nums[left] + nums[right] == target {
                    res.append([nums[i], nums[j], nums[left], nums[right]])
                    
                    left += 1
                    right -= 1
                    
                    while left < right, nums[left] == nums[left-1] {
                        left += 1
                    }
                    
                    while left < right, nums[right] == nums[right + 1] {
                        right -= 1
                    }
                } else if nums[i] + nums[j] + nums[left] + nums[right] < target {
                    left += 1
                } else {
                    right -= 1
                }
            }
        }
    }
    
    return res
}
