    func mergeKLists(_ lists: [ListNode?]) -> ListNode? {
        guard lists.count > 0 else { return nil }
        
        var lists = lists
        
        while lists.count > 1 {
            var i = 0, newList = [ListNode?]()
            
            while i+1 < lists.count {
                newList.append(merge(lists[i], lists[i+1]))
                i += 2
            }
            
            if lists.count%2 == 1 {
                newList.append(lists.last!)
            }
            
            lists = newList
        }
        
        return lists.first!
    }
    
    private func merge(_ la: ListNode?, _ lb: ListNode?) -> ListNode? {
        var la = la, lb = lb
        
        if la == nil { return lb }
        if lb == nil { return la }
        
        var dummy = ListNode(0)
        var node = dummy
        
        while la != nil, lb != nil {
            if la!.val < lb!.val {
                node.next = la
                node = la!
                la = la!.next
            } else {
                node.next = lb
                node = lb!
                lb = lb!.next
            }
        }
        
        if la != nil {
            node.next = la
        } else {
            node.next = lb
        }
        
        return dummy.next
    }
